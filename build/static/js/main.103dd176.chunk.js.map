{"version":3,"sources":["pages/index.js","recipes.js","pages/recipes.js","pages/recipe.js","pages/categories.js","App.js","serviceWorker.js","index.js"],"names":["react_default","a","createElement","style","display","justifyContent","alignItems","height","background","backgroundSize","backgroundPosition","padding","margin","color","className","react_router_dom","to","Component","recipes","american","img_url","name","ingredients","qty","method","mexican","indian","vegan","soups","state","value","_this2","this","categories","Object","keys","console","log","new_array","map","category","key","forEach","recipe","push","props","match","params","toUpperCase","r","i","recipe_id","src","width","maxWidth","item","index","placeholder","filtered_array","filter","includes","toLowerCase","type","onChange","e","setState","target","length","AppRouter","react_router","path","exact","component","Home","Categories","Recipes","Recipe","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.103dd176.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default class extends Component {\n    render() {\n        return (\n            <div style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '100vh',\n                background: \"url('/nam.webp')\",\n                backgroundSize: 'cover',\n                backgroundPosition: 'center',\n                padding: 0,\n                margin: 0\n            }}>\n                <div style={{\n                    color: '#fafafa'\n                }} className=\"container\">\n                    <h1>NamChef!</h1>\n                    <p>Delicious recipes!</p>\n                    <br/>\n                    <Link className='btn' to='/recipes/'>Browse</Link>\n                </div>\n            </div>\n        )\n    }\n}\n","export const recipes = {\n    american: [\n        {\n            img_url: \"https://d1doqjmisr497k.cloudfront.net/-/media/mccormick-us/recipes/mccormick/m/800/mccormick-sloppy-joes.ashx?vd=20180710T032726Z&hash=4D7B4CC9F2D31300AD8A09450A8BB834318673BF\",\n            name: 'Homemade Sloppy Joes',\n            ingredients: [\n                {\n                    name: 'Lean beef mince',\n                    qty: '600g'\n                },\n                {\n                    name: 'Onion',\n                    qty: '1 Chopped'\n                },\n                {\n                    name: 'Garlic',\n                    qty: '2 Cloves of minced'\n                },\n                {\n                    name: 'Green Pepper',\n                    qty: '1 diced'\n                },\n                {\n                    name: 'Water',\n                    qty: '1 Cup'\n                },\n                {\n                    name: 'Tomato Sauce',\n                    qty: '3/4 Cup'\n                },\n                {\n                    name: 'Worcestershire sauce',\n                    qty: '1 dash'\n                },\n                {\n                    name: 'Brown Sugar',\n                    qty: '2 tablespoons'\n                },\n                {\n                    name: \"Dijon Mustard\",\n                    qty: \"1 teaspoon\"\n                },\n                {\n                    name: \"Salt\",\n                    qty: \"1 1/2 teaspoon\"\n                },\n                {\n                    name: \"Black Pepper\",\n                    qty: \"1/2 teaspoon ground\"\n                },\n                {\n                    name: \"Cayenne Pepper\",\n                    qty: \"(Optional) Pinch of\"\n                },\n                \n            ],\n            method: [\n                \"Cook mince and onion in a saucepan on medium until brown and crumbly.\",\n                \"Stir in garlic, green pepper and cook until softened (2, 3 minutes) then add 1 cup water.\",\n                \"Mix in tomato sauce, Worcestershire sauce, brown sugar, Dijon mustard, salt and black pepper. Add 1 more cup of water and return mixture to simmer.\",\n                \"Reduce heat to low and simmer, stirring occasionally, until the liquid has evaporated and mixture is thick (40 minutes).\",\n                \"Season with salt, black pepper and cayenne pepper to taste\"\n            ]\n        }\n    ],\n    mexican: [\n        {\n            img_url: \"https://amyeverafter.com/wp-content/uploads/2016/06/Mexican-Salad-Featured.jpg\",\n            name: 'Mexican Salad Bowl',\n            ingredients: [\n                {\n                    name: 'Chicken',\n                    qty: 'Cubed'\n                },\n                {\n                    name: 'Warm brown rice',\n                    qty: ''\n                },\n                {\n                    name: 'Avo',\n                    qty: '1'\n                },\n                {\n                    name: 'Rocket/Lettuce',\n                    qty: ''\n                },\n                {\n                    name: 'Wraps (For chips)',\n                    qty: ''\n                },\n                {\n                    name: 'Baby Tomato',\n                    qty: ''\n                },\n                {\n                    name: 'Black beans',\n                    qty: ''\n                },\n                {\n                    name: 'Lemons',\n                    qty: ''\n                }\n                \n            ],\n            method: [\n                \"Prepare the chicken\",\n                \"Boil the brown rice\",\n                \"Make a platter of each ingredient: lettuce, avo, chopped tomatoes, mielies and black beans\",\n                \"Cut wrap into small chips, put in tray with olive oil and salt. Bake in the oven until brown and crispy\",\n                \"Enjoy!\"\n            ]\n        }\n    ],\n    indian: [\n        {\n            img_url: \"https://www.vegrecipesofindia.com/wp-content/uploads/2009/08/moong-dal-fry-recipe-1.jpg\",\n            name: 'Dhal Tadka',\n            ingredients: [\n                {\n                    name: 'Red lentils',\n                    qty: '1 Cup'\n                },\n                {\n                    name: 'Ghee or butter',\n                    qty: '1 tablespoon'\n                },\n                {\n                    name: 'Crushed ginger',\n                    qty: '1 tablespoon'\n                },\n                {\n                    name: 'Tomatoes',\n                    qty: '4'\n                },\n                {\n                    name: 'Tumeric',\n                    qty: '1/3 teaspoon'\n                },\n                {\n                    name: 'Garam Masala',\n                    qty: '1 teaspoon'\n                },\n                {\n                    name: 'Jeera',\n                    qty: '1 teaspoon'\n                }\n                \n            ],\n            method: [\n                \"Rinse red lentils and boil in 2 cups of water until soft, then add a pinch of salt, tumeric and a teaspoon of lemon juice\",\n                \"In a separate pot, fry ghee/butter and add jeera, then add ginger when seeds start to splutter.\",\n                \"Next add tomatoes and garam masala and cook until ghee and tomatoes seperate.\",\n                \"Once tomatoes are cooked, add the mixture to the pot of lentils and cook until water evaporates and mixture is thick (15 to 20 minutes)\",\n                \"Serve with rice or naan (flatbread) and enjoy!\"\n            ]\n        },\n        {\n            img_url: \"https://recipes.timesofindia.com/thumb/62743903.cms?width=340&height=340\",\n            name: 'Paneer Butter Masala',\n            ingredients: [\n                {\n                    name: 'Paneer Cubes',\n                    qty: '125g'\n                },\n                {\n                    name: 'Ghee or butter',\n                    qty: '1 tablespoon'\n                },\n                {\n                    name: 'Crushed ginger',\n                    qty: '1 tablespoon'\n                },\n                {\n                    name: 'Tomatoes',\n                    qty: '4'\n                }\n                \n            ],\n            method: [\n                \"In a separate pot, fry ghee/butter and add jeera, then add ginger when seeds start to splutter\"\n            ]\n        }\n    ],\n    vegan: [\n        {\n            img_url: \"https://cookieandkate.com/images/2017/06/how-to-make-vegan-mac-and-cheese-550x378.jpg\",\n            name: 'Amazing Vegan Mac and Cheese',\n            ingredients: [\n                {\n                    name: 'whole-grain macaroni elbows',\n                    qty: '8 ounces'\n                },\n                {\n                    name: 'A head of broccoli, florets cut into small bites',\n                    qty: 'about 1 ½ to 2 cups'\n                },\n                {\n                    name: 'avocado oil or extra-virgin olive oil',\n                    qty: '1 ½ tablespoons'\n                },\n                {\n                    name: 'small yellow onion, chopped',\n                    qty: 'about 1 ½ cups'\n                },\n                {\n                    name: 'cup peeled and grated russet potato',\n                    qty: '4 ounces, about 1 small or ½ medium potato'\n                },\n                {\n                    name: 'cloves garlic, pressed or minced',\n                    qty: '3'\n                },\n                {\n                    name: 'teaspoon garlic powder',\n                    qty: '1/2'\n                },\n                {\n                    name: 'teaspoon onion powder',\n                    qty: '1/2'\n\n                },\n                {\n                    name: 'teaspoon dry mustard powder',\n                    qty: '1/2'\n\n                }\n\n                \n            ],\n            method: [\n                \"Bring a large pot of salted water to boil for the pasta. Cook according to package directions. If using broccoli, stir it into the pot when just 2 to 3 more minutes remain. Drain, and transfer the contents to a large serving bowl.\",\n                \"Meanwhile, in a medium-to-large saucepan, warm the oil over medium heat. Add the onion and a pinch of salt and cook, stirring often, until the onion is tender and turning translucent, about 5 minutes.\",\n                \"Add the grated potato, garlic, garlic powder, onion powder, mustard powder, salt and red pepper flakes. Stir to combine, and cook, stirring constantly, for about 1 minute to enhance their flavors.\",\n                \"Add the cashews and water, and stir to combine. Let the mixture come to a simmer. Continue simmering, stirring frequently and reducing heat as necessary to avoid a rapid boil, until the potatoes are completely tender and cooked through, about 5 to 8 minutes.\",\n                \"Carefully pour the mixture into a blender. Add the nutritional yeast and 2 teaspoons vinegar. Blend until the mixture is completely smooth, about 2 minutes, stopping to scrape down the sides if necessary. If the mixture won’t blend easily or if you would prefer a thinner consistency, add water in ¼ cup increments, blending after each one.\",\n                \"Taste, and blend in additional salt until the sauce is utterly irresistible (I typically add at least another ½ teaspoon). If it needs a little more zip, add the remaining teaspoon of vinegar. Blend again.\",\n                \"Pour the sauce into the bowl of pasta. Stir until well combined, and serve immediately. Leftovers keep well, chilled and covered, for 3 to 4 days. Gentle reheat, adding a tiny splash of water if necessary to loosen up the sauce.\"\n            ]\n        },\n        \n    ],\n    soups: [\n        {\n            img_url: \"https://tmbidigitalassetsazure.blob.core.windows.net/secure/RMS/attachments/37/1200x1200/Roasted-Autumn-Vegetable-Soup_exps131562_TH143193A04_29_6b_RMS.jpg\",\n            name: 'Vegetable Soup',\n            ingredients: [\n                {\n                    name: 'Carrots',\n                    qty: '3 large '\n                },\n                {\n                    name: 'Leek',\n                    qty: '1'\n                },\n                {\n                    name: 'Potato',\n                    qty: '1'\n                },\n                {\n                    name: 'Tomato',\n                    qty: '1'\n                },\n                {\n                    name: 'Turnip',\n                    qty: '1'\n                },\n                {\n                    name: 'Onion',\n                    qty: '1'\n                },\n                {\n                    name: 'Celery',\n                    qty: 'A few sprigs of'\n                },\n                {\n                    name: 'Parsley',\n                    qty: '1 sprig of'\n                }\n                \n            ],\n            method: [\n                \"Cook all chopped ingredients in a pot with a little butter or oil\",\n                \"Then boil all chopped ingredients in a litre of water until soft, then add a pinch of salt and pepper\",\n                \"Blend until smooth and serve with buttered bread\"\n            ]\n        }\n    ]\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport {recipes} from '../recipes'\n\nexport default class extends Component {\n    state = {\n        value: ''\n    }\n    render() {\n        // console.log(\"RECIPES\", recipes);\n\n        const categories = Object.keys(recipes);\n              console.log(\"print something\", categories);\n            //   alert(categories);\n      \n        // const test_array = ['test1', \"test2\"]\n        var new_array = [];\n        \n        // categories [\"\",\"\",\"\"]\n        categories.map((category, key)=>{\n            // recipes {category: [], category2: []}\n\n            const recipe_list_by_category = recipes[category];\n\n            recipe_list_by_category.forEach((recipe) => {\n                new_array.push({\n                    name: recipe.name,\n                    category: category\n                 }) \n            })\n              \n        })\n\n        console.log(\"THIS IS THE PROCESSED ARRAY\",new_array);\n\n        return (\n            <div className='container'>\n                {/*<input \n                    value={this.state.value} \n                    type='text' \n                    onChange={e => {\n                        this.setState({ value: e.target.value })\n                    }}\n                />\n                {\n                    new_array.filter(i => i.name.includes(this.state.value))\n                    .map((item, index) => (\n                        <div key={index}>\n                            {item.name}\n                        </div>\n                    ))\n                }\n                <br/>\n            */}\n\n                <Link className='button btn-block' to='/recipes/'>Back to Categories</Link>\n                <h2>{this.props.match.params.category.toUpperCase()} RECIPES</h2>\n                {\n                    recipes[this.props.match.params.category].map((r, i) => (\n                        <div key={i}>\n                            <Link className='btn btn-block' to={'/recipes/' + this.props.match.params.category + '/' + i}>{r.name}</Link>\n                            <br/>\n                        </div>\n                    ))\n                }\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport {recipes} from '../recipes'\n\nexport default class extends Component {\n    render() {\n        const recipe = recipes[this.props.match.params.category][this.props.match.params.recipe_id];\n        return (\n            <div>\n                <br/>\n                <Link className='button btn-block' to={'/recipes/' + this.props.match.params.category}>Back to {this.props.match.params.category} Recipes</Link>\n                <br/>\n                <img src={recipe.img_url} style={{\n                    width: '100%',\n                    maxWidth: '300px',\n                    height: 'auto'\n                }}/>\n                <h2>{recipe.name.toUpperCase()}</h2>\n                <h4>Ingredients</h4>\n                {\n                    recipe.ingredients.map((item, index) => (\n                        <li key={index}>{item.qty + ' ' + item.name}</li>\n                    ))\n                }\n                <h4>Method</h4>\n                {\n                    recipe.method.map((item, index) => (\n                        <li key={index}>{item}</li>\n                    ))\n                }\n                <br/><br/>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport {recipes} from '../recipes'\n\nexport default class extends Component {\n    state = {\n        value: '',\n        placeholder:'Search for recipe...'\n    }\n    render() {\n        const categories = Object.keys(recipes);\n        console.log(\"print something\", categories);\n        var new_array = [];\n        // categories [\"\",\"\",\"\"]\n        categories.map((category, key)=>{\n       // recipes {category: [], category2: []}\n            const recipe_list_by_category = recipes[category];\n            recipe_list_by_category.forEach((recipe, key) => {\n                new_array.push({\n                    name: recipe.name,\n                    category: category,\n                    key: key\n                }) \n            })\n        })\n\n        const filtered_array = new_array.filter(i => i.name.includes(this.state.value) || i.name.toLowerCase().includes(this.state.value));\n\n    return(\n        <div className='container row'>\n            <Link className='button btn-block' to='/'>Back to Home</Link>\n                <h2>RECIPES</h2>\n                <input \n                    value={this.state.value} \n                    type='text' \n                    placeholder={this.state.placeholder}\n                    onChange={e => {\n                        this.setState({ value: e.target.value })\n                    }}\n                />\n                {\n                    filtered_array.length > 0 ?\n                    filtered_array\n                    .map((item, index) => (\n                        this.state.value ?\n                        <div key={index}>\n                            <Link className='' to={'/recipes/' + item.category + '/' + item.key}>{item.name}</Link>\n                        </div>\n                        :\n                        <p></p>\n                    )) :\n                    <p>No results found!</p>\n                }\n                <br/>\n                <div className=\"col-6-sm\">\n                    <Link className='btn btn-block' to='/recipes/indian'>Indian</Link>\n                </div>\n                <div className=\"col-6-sm\">\n                    <Link className='btn btn-block' to='/recipes/mexican'>Mexican</Link>\n                </div>\n                <div className=\"col-6-sm\">\n                    <Link className='btn btn-block' to='/recipes/american'>American</Link>\n                </div>\n                <div className=\"col-6-sm\">\n                    <Link className='btn btn-block' to='/recipes/soups'>Soups</Link>\n                </div>\n                <div className=\"col-6-sm\">\n                    <Link className='btn btn-block' to='/recipes/vegan'>Vegan</Link>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Home from './pages/index'\nimport Recipes from './pages/recipes'\nimport Recipe from './pages/recipe'\nimport Categories from './pages/categories'\nimport './App.css'\nimport './simple-grid.min.css'\n\nfunction AppRouter() {\n  return (\n    <Router>\n     <div>\n        <Route path=\"/\" exact component={Home} />\n        <div className='container center'>\n          <Route path=\"/recipes\" exact component={Categories} />\n          <Route path=\"/recipes/:category\" exact component={Recipes} />\n          <Route path=\"/recipes/:category/:recipe_id\" exact component={Recipe} />\n        </div>\n     </div>\n    </Router>\n  );\n}\n\nexport default AppRouter;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}